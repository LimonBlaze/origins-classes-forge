buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, 'origins_classes.refmap.json'
}

version = project.mod_version
group = project.maven_group
archivesBaseName = project.archives_base_name

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {

    mappings channel: "parchment", version: "${project.mappings_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            args '-mixin.debug=true', '-mixin.debug.export=true', '-mixin.config=origins_classes.mixins.json'

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            mods {
                origins_classes {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            args '-mixin.debug=true', '-mixin.debug.export=true', '-mixin.config=origins_classes.mixins.json'

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            mods {
                origins_classes {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'origins_classes', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                origins_classes {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDirs += 'src/generated/resources'
}

repositories {
    maven {
        url 'https://maven.theillusivec4.top'
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"

    //Dependencies
    implementation fg.deobf(group: 'top.theillusivec4.caelus', name: 'caelus-forge', version: "${project.caelus_version}")
    implementation fg.deobf("curse.maven:origins-474438:${project.origins_version}")
    //Compat Dependencies
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation fg.deobf("curse.maven:apotheosis-313970:${project.apotheosis_version}")
    implementation fg.deobf("curse.maven:farmers-delight-398521:${project.farmers_delight_version}")
    implementation fg.deobf("curse.maven:appleskin-248787:${project.appleskin_version}")
    implementation fg.deobf("curse.maven:mutil-351914:${project.mutil_version}")
    implementation fg.deobf("curse.maven:tetra-289712:${project.tetra_version}")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand 'version': project.version,
               'mc_requirements': project.mc_requirements,
               'forge_requirements': project.forge_requirements,
               'origins_requirements': project.origins_requirements
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.mod_id,
                "Implementation-Version"  : project.mod_version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : 'origins_classes.mixins.json'
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
